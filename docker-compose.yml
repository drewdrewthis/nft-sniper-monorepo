version: '3.8'

## This doesn't work, unfortunately
# name: "sniper-staging-compose"

services:
  # gateway-core:
  #   image: drewdrewthis/nft-sniper:latest
  #   x-aws-pull_credentials: "arn:aws:secretsmanager:us-east-1:218278947951:secret:pullcred-ViM6rh"
  #   entrypoint: 'node dist/src/main'
  #   restart: unless-stopped
  #   ports:
  #     - 3000:3000
  #   env_file:
  #     - .env
  #   networks:
  #     - snipernetwork

  crawler:
    image: drewdrewthis/nft-sniper-crawler:latest
    x-aws-pull_credentials: "arn:aws:secretsmanager:us-east-1:218278947951:secret:pullcred-ViM6rh"
    restart: unless-stopped
    command: >
        bash -c "
        npx prisma migrate deploy
        && npx prisma db seed
        && node dist/scheduler/index.js
        & npx prisma studio"
    ports:
      - '3001:3001'
      - '5555:5555'
    environment:
      - REDIS_HOST=redis-server
      - REDIS_PORT=6379
      - RUN_SCRAPER_FILE=dist/opensea/main.js
      - DATABASE_URL=postgresql://admin1:somethingcool@crawler-postgres:5432/crawler?schema=public
      - SCHEDULER_FREQUENCY_MS=300002
      - NODE_OPTIONS=--max_old_space_size=4096
    depends_on:
      - redis-server
      - crawler-postgres
    networks:
    - snipernetwork
    # deploy:
    #   resources:
    #     limits:
          # cpus: '0.5'
          # memory: 2Gb

  # redis:
  #   image: redis:6.2-alpine
  #   restart: always
  #   # ports:
  #   #   - '6379:6379'
  #   networks:
  #   - snipernetwork

  redis-server:
    image: redis:6.2-alpine
    restart: always
    networks:
    - snipernetwork

  crawler-postgres:
    image: postgres:13
    restart: always
    # ports:
    #   - 5432:5432
    environment:
      POSTGRES_USER: admin1
      POSTGRES_DB: crawler
      POSTGRES_PASSWORD: somethingcool
    # env_file:
    #   - .env
    networks:
    - snipernetwork

networks:
  snipernetwork: